# This workflow will upload a Python Package using Twine when a release is created.
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support documentation.

name: Upload Python Package

on:
  release:
    types: [published]
  push:
    branches:
      - main
      - master

permissions:
  contents: read

jobs:
  deploy:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest]
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}

    - name: Set up R
      uses: r-lib/actions/setup-r@v2
      with:
        r-version: '4.4.2'

    - name: Install R dependencies
      run: |
        Rscript -e 'install.packages(c("survey", "ICS"), repos="https://cloud.r-project.org/")'

    # Debug step to list all files in the working directory
    - name: Debug - List files in working directory
      run: ls -la

    # Debug step to show the contents of requirements.txt
    - name: Debug - Show requirements.txt contents
      run: cat requirements.txt

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install pytest build
        python -m pip install -r requirements.txt
        python -m pip install rpy2

    # Debug step to check installed packages
    - name: Check installed packages
      run: pip list

    - name: Run tests
      run: pytest tests

    - name: Build package
      if: success()
      run: python -m build

#    - name: Publish package
#      if: success()
#      uses: pypa/gh-action-pypi-publish@27b31702a0e7fc50959f5ad993c78deac1bdfc29
#      with:
#        user: __token__
#        password: ${{ secrets.PYPI_API_TOKEN }}
